version: "3.7"

services:
  mysql:
    restart: unless-stopped
    build:
      context: ./mariadb
      dockerfile: Dockerfile
    image: docker-mariadb
    container_name: mariadb
    volumes:
      - ~/mariadb:/var/lib/mysql
      - ./mariadb/ssl:/etc/mysql/ssl
      - ./mariadb/50-server.cnf:/etc/mysql/mariadb.conf.d/50-server.cnf
      - ./mariadb/50-mysql-clients.cnf:/etc/mysql/mariadb.conf.d/50-mysql-clients.cnf
    # environment:
    #   - SERVER_KEY=$(cat -E /etc/mysql/ssl/server-key.pem | xargs)
    #   - SERVER_CERT=$(cat -E /etc/mysql/ssl/server-cert.pem | xargs)
    #   - CA_CAER=$(cat -E /etc/mysql/ssl/ca-cert.pem | xargs)
    expose:
      - 3306
    ports:
      - 3306:3306
  # mongo:
  #   restart: unless-stopped
  #   build:
  #     context: ./mongo
  #     dockerfile: Dockerfile
  #   image: docker-mongo
  #   container_name: mongo
  #   volumes:
  #     - Z:/mongo/data/db:/data/db
  #     - Z:/mongo/data/configdb:/data/configdb
  #   expose:
  #     - 27017
  #   ports:
  #     - 27018:27017
  redis:
    restart: unless-stopped
    build:
      context: ./redis
      dockerfile: Dockerfile
    image: docker-redis
    container_name: redis
    volumes:
      - ~/redis:/data
    expose:
      - 6379
    ports:
      - 6379:6379
    command: redis-server --requirepass 0000
  # node1:
  #   restart: on-failure:5
  #   build:
  #     context: ./node
  #     dockerfile: Dockerfile
  #   container_name: fastify-1
  #   volumes:
  #     - ./node:/home/node/app
  #     - ./node/nodemon.json:/home/node/app/nodemon.json
  #   expose:
  #     - 4000
  #   ports:
  #     - 8081:4000
  #   command: yarn dev
  #   depends_on:
  #     - mongo
  #     - mysql
  nginx:
    restart: on-failure:5
    build:
      context: ./nginx
      dockerfile: Dockerfile
    image: docker-nginx
    container_name: nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    expose:
      - 80
    ports:
      - 8888:80
  nest-1:
    restart: on-failure:5
    build:
      context: ./nest
      dockerfile: Dockerfile
    image: docker-nest
    container_name: nest-1
    volumes:
      - ./nest:/usr/src/app
    expose:
      - 4000
    ports:
      - 8081:4000
    command: yarn start:dev
    depends_on:
      # - mongo
      - mysql
  # nest-2:
  #   restart: on-failure:5
  #   build:
  #     context: ./nest
  #     dockerfile: Dockerfile
  #   image: docker-nest
  #   container_name: nest-2
  #   volumes:
  #     - ./nest:/usr/src/app
  #   expose:
  #     - 4000
  #   ports:
  #     - 8082:4000
  #   command: yarn start:dev
  #   depends_on:
  #     # - mongo
  #     - mysql
  web:
    restart: on-failure:5
    build:
      context: ./web
      dockerfile: Dockerfile
      # target: base
    image: docekr-web
    container_name: web-1
    volumes:
      - ./web:/home/node/app
      - ./web/nodemon.json:/home/node/app/nodemon.json
    expose:
      - 3000
    ports:
      - 8080:3000
    command: yarn dev
    depends_on:
      - nest-1
      # - node2
